---
# tasks file for wordpress
- name: Create WordPress database
  become: true
  mysql_db:
    name: "{{ wordpress_database }}"
    state: present
    login_user: "{{ mysql_root_user }}"
    login_password: "{{ mysql_root_password }}"
  tags: mysql,wordpress_db

- name: Create WordPress user
  become: true
  mysql_user:
    name: '{{ wordpress_user }}'
    password: '{{ wordpress_user_password }}'
    priv: "{{ wordpress_database }}.*:ALL"
    host: '{{ wordpress_database_host }}'
    state: present
    login_user: "{{ mysql_root_user }}"
    login_password: "{{ mysql_root_password }}"
  tags: mysql,wordpress_db

# Check if the file exists
- name: Check if WordPress archive exists
  become: true
  stat:
    path: /tmp/wordpress.tar.gz
  register: wordpress_archive
  tags: wordpress

# Download only if file is not present
- name: Download WordPress
  become: true
  get_url:
    url: https://wordpress.org/latest.tar.gz
    dest: /tmp/wordpress.tar.gz
  when: not wordpress_archive.stat.exists
  tags: wordpress

- name: Create the web root directory
  become: true
  file:
    path: "{{wordpress_path}}"
    state: directory
    owner: www-data
    group: www-data
    mode: '0755'
  tags: wordpress

- name: Extract the WordPress archive
  become: true
  unarchive:
    src: /tmp/wordpress.tar.gz
    dest: "{{wordpress_path}}"
    remote_src: yes
    owner: www-data
    group: www-data
    mode: '0755'
  tags: wordpress

- name: Install php dependencies
  become: true
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - php-fpm
    - php-mysql
    - php-curl
    - php-xml
  tags: wordpress,php

- name: Configure WordPress
  become: true
  template:
    src: wp-config.php.j2
    dest: "{{wordpress_path}}/wordpress/wp-config.php"
    owner: www-data
    group: www-data
    mode: '0644'
  tags: wordpress,php

- include_tasks: nginx.yml